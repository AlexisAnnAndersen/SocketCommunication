package alexisandersen;

import java.io.*;
import java.net.*;
import java.nio.file.*;


public class SocketCommunication {
	
	public static class ServerHandler implements Runnable {
		public ServerSocket socket;
		
		@Override
		public void run() {
			// TODO Auto-generated method stub
			try {
				ServerSocket server = new ServerSocket(8080);
				while (!server.isClosed()) {
					System.out.println("Waiting for a Connection....");
					ConnectionHandler handler = new ConnectionHandler(server.accept());
					handler.run(); // could run as a thread
				}
				server.close();			
			}
			catch (Exception e) {
				System.err.println(e.getLocalizedMessage());
			}
		}
	
	}
	
	public static class ConnectionHandler implements Runnable {
		private Socket connection;
		private void setSocket(Socket connection) {
			this.connection = connection;
		}
		
		ConnectionHandler(Socket connection) {
			super();
			setSocket(connection);
		}
		
		
		@Override
		public void run() {
			// 1. Read HTTP request from the client socket (in) 
			// 2. Prepare an HTTP response (compose) 
			// 3. Send HTTP response to the client (out) 
			// 4. Close the socket (close)
			String[] tokens = null;
			
			BufferedReader in = null;
			PrintWriter out = null;
			
			try {
				in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
				out = new PrintWriter(connection.getOutputStream(), true);
				tokens = in.readLine().split(" ");
				Path path = Paths.get("." + tokens[1]);
				if (Files.exists(path))
				{					
					System.out.println("Exists");
					BufferedReader fin = Files.newBufferedReader(path);
					String s = null;
					while ((s = fin.readLine()) != null) {
						out.write(s); // hmm
						System.out.println(s);
					}
					fin.close();
				}
				else
				{
					System.out.println("Doesn't Exist");
					path = Files.createFile(path);
					BufferedWriter fout = Files.newBufferedWriter(path);
					String default_content = "New autogenerated file";
					fout.write(default_content);
					out.write(default_content); // hmm
					System.out.println(default_content);
					fout.close();
				}
				out.close();
				connection.close();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}		
	}
	
	public static void main(String args[]) {
		ServerHandler handler = new ServerHandler();
		handler.run(); // could run as a thread.
		
	}
}
